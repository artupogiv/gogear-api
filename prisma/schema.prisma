generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(ulid())

  fullName String
  email    String @unique

  password Password?

  carts Cart[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Password {
  id String @id @default(ulid())

  hash String

  user   User   @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  userId String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cart {
  id String @id @default(ulid())

  items CartItem[]

  user   User   @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  userId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CartItem {
  id String @id @default(ulid())

  quantity Int

  product   Product @relation(fields: [productId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  productId String

  Cart   Cart   @relation(fields: [cartId], references: [id])
  cartId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id String @id @default(ulid())

  slug String @unique
  name String @unique

  products Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id String @id @default(ulid())

  slug        String  @unique
  name        String  @unique
  description String? @db.Text
  imageUrl    String
  price       Int

  category   Category? @relation(fields: [categoryId], references: [id])
  categoryId String?

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  CartItem  CartItem[]
}
